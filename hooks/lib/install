#!/bin/bash

export LC_ALL=C

CURRENT_DIR=`dirname $0`
LS_LICENSE_URL="http://people.canonical.com/~andreas/54dee2e5296e360111c2af5d43b8c35aa283e65f/license.txt"
LS_PPA=`config-get repository`
SAMPLE=`config-get sample_data`

LS_PACKAGE="landscape-server_*.tar.gz"

LSENV="/opt/canonical/landscape/scripts/landscape-env.sh"
KEY_FILE=/etc/ssl/private/landscape_server.key
CERT_FILE=/etc/ssl/certs/landscape_server.pem
CA_CERT_FILE=/etc/ssl/certs/landscape_server_ca.crt
SOURCES_FILE=/etc/apt/sources.list.d/landscape-devel-team.list
CODENAME=$(cat /etc/lsb-release | grep CODENAME | sed 's/.*=//')
FRESHDATA=/root/lds-quickstart-freshdata


die() {
    STATUS=$?
    echo "ERROR: $1"
    exit $STATUS 
}

install_desp() {
    apt_get install apt-transport-https
    apt_get install ntp dpkg-dev debhelper devscripts python-dev python-setuptools \
                    python-support wget pwgen
}

install_license() {
    mkdir -p /etc/landscape
    wget -O /etc/landscape/license.txt $LS_LICENSE_URL
}

install_cert() {
    CN=${1:-$PUBLIC}
    tmpfile=$(mktemp /tmp/XXXXXX) || exit 1
    cat > $tmpfile <<EOF
RANDFILE                = /dev/urandom

[ req ]
default_bits            = 1024
default_keyfile         = privkey.pem
distinguished_name      = req_distinguished_name
prompt                  = no
policy                  = policy_anything
x509_extensions         = v3_ca

[ req_distinguished_name ]
commonName              = $CN

[ v3_ca ]
# Extensions to add to a certificate request
subjectAltName          = @alt_names

[alt_names]
DNS.1   = $PUBLIC
DNS.2   = $PRIVATE
DNS.3   = $FQDN
EOF
    cat $tmpfile

    openssl req \
        -new -x509 -nodes -days 3650 \
        -config $tmpfile \
        -out $CERT_FILE \
        -keyout $KEY_FILE
    cp -f $CERT_FILE $CA_CERT_FILE
    rm -f $tmpfile

    echo "Installed new certificate:"
    echo "  Certificate: $CERT_FILE"
    echo "  CA Certificate: $CA_CERT_FILE"
    echo "  Private Key: $KEY_FILE"
}

setup_local_repo () {
    # If deb files are in place in the charm directory, setup a local
    # repository for installation

    ls $LS_PACKAGE || return;

    TMP=$(mktemp -d)
    cp -f $LS_PACKAGE $TMP

    PWD=$(pwd)

    # stage the source TGZ
    cd $TMP
    tar --strip=1 -xf $LS_PACKAGE
    ver=$(dpkg-parsechangelog|grep ^Version:|cut -d ' ' -f 2)
    dch -v 9999:$ver development --distribution $(lsb_release -cs)

    # Actually build the package.
    dpkg-buildpackage -us -uc

    # Stage the file:// based apt repository
    mv ../*.deb .
    dpkg-scanpackages -m . /dev/null > Packages
    cat Packages | bzip2 -9 > Packages.bz2
    cat Packages | gzip -9 > Packages.gz
    dpkg-scansources . > Sources
    cat Sources | bzip2 -9 > Sources.bz2
    cat Sources | gzip -9 > Sources.gz
    apt-ftparchive release . > Release

    # Add myh repository to apt
    add_apt_sources "deb file://$TMP/ ./"

    cd $PWD
}


get_private_ip () {
    # Make sure that we use the resolvable private address
    # dig deals with both hostnames and ip addresses in a nice
    # way - this has been tested in local and ec2 providers
    # with ec2 and openstack
    dig +short `unit-get private-address`
}

tune_postgres() {
    PG_CONF=/etc/postgresql/9.1/main/postgresql.conf
    juju-log "Attempting to optimize postgresql for this system"
    service postgresql stop
    mv $PG_CONF $PG_CONF.juju.orig
    pgtune -i $PG_CONF.juju.orig -o $PG_CONF
    set +e
    foo=$(service postgresql start 2>&1)
    rc=$?
    set -e

    if [ $rc -ne 0 ]; then
        size=$(echo $foo | egrep -E 'size=[0-9]+' | sed -E 's/.*size=([0-9]+).*/\1/')
        juju-log "Adjusting kernel.shmmax to $size"
        sysctl kernel.shmmax=$size
        echo "kernel.shmmax = $size" >> /etc/sysctl.d/*-postgresql-shm.conf
        juju-log "Starting up postgresql now"
        service postgresql start
    fi

}

install_landscape() {
    apt_get update;
    apt_get install \
        landscape-server apache2 apache2-mpm-worker \
        pgbouncer glusterfs-server
}

# $1 - optional additional source line to add
add_apt_sources() {
    cat > $SOURCES_FILE <<-EOMSG
deb ${LS_PPA} ${CODENAME} main
$1
EOMSG
    chmod go+r $SOURCES_FILE
    apt-key adv --keyserver keyserver.ubuntu.com --recv-key D394F4BC
    apt-key adv --keyserver keyserver.ubuntu.com --recv-key 4652B4E6
}

function apt_get() {
    DEBIAN_FRONTEND=noninteractive apt-get \
        --allow-unauthenticated -y \
        -o Dpkg::Options::='--force-confold' $*;
}

get_network() {
    API_VERSION="2008-02-01"
    METADATA_URL="http://169.254.169.254/$API_VERSION/meta-data"

    #FQDN=`hostname -f`
    FQDN=`unit-get public-address`
    PRIVATE=`unit-get private-address`
    PUBLIC=$FQDN
    HOSTNAME=`dig +short $PUBLIC`

    echo network data: $FQDN $PUBLIC $PRIVATE
}

configure_landscape() {
    mkdir -p /etc/landscape

    a2enmod rewrite
    a2enmod proxy_http
    a2enmod ssl
    a2enmod headers
    a2enmod expires

    a2dissite default
    cp $CURRENT_DIR/site-definition /etc/apache2/sites-available/landscape

    sed -e "s/@local@/localhost/;s/@hostname@/$HOSTNAME/" -i /etc/apache2/sites-available/landscape

    a2ensite landscape

    mkdir /srv/landscape
    chown landscape:landscape /srv/landscape
    gluster volume create landscape-volume transport tcp $PRIVATE_IP:/srv/landscape
    gluster volume start landscape-volume

    if [ ! -c /dev/fuse ]; then
        mknod /dev/fuse c 10 229
    fi

    sed -i 's/RUN_CRON=.*/RUN_CRON="yes"/g' /etc/default/landscape-server
    sed -i 's/RUN_API=.*/RUN_API="yes"/g' /etc/default/landscape-server
    sed -i 's/RUN_APPSERVER=.*/RUN_APPSERVER="yes"/g' /etc/default/landscape-server
    sed -i 's/RUN_ASYNC_FRONTEND=.*/RUN_ASYNC_FRONTEND="yes"/g' /etc/default/landscape-server
    sed -i 's/RUN_COMBO_LOADER=.*/RUN_COMBO_LOADER="yes"/g' /etc/default/landscape-server
    sed -i 's/RUN_MSGSERVER=.*/RUN_MSGSERVER="yes"/g' /etc/default/landscape-server
    sed -i 's/RUN_PACKAGEUPLOADSERVER=.*/RUN_PACKAGEUPLOADSERVER="yes"/g' /etc/default/landscape-server
    sed -i 's/RUN_PINGSERVER=.*/RUN_PINGSERVER="yes"/g' /etc/default/landscape-server
}

configure_pgbouncer() {
    sed -i 's/START=.*/START=1/g' /etc/default/pgbouncer
    sed -i 's/listen_port = .*/listen_port = 5432/g' /etc/pgbouncer/pgbouncer.ini
    sed -i 's/listen_addr = .*/listen_addr = \*/g' /etc/pgbouncer/pgbouncer.ini
}

# Workaround for: https://bugs.launchpad.net/juju/+bug/993034
echo 'Acquire::https { Proxy "false"; };' >> /etc/apt/apt.conf.d/02juju-apt-proxy

install_deps
get_network

install_cert $PRIVATE

# Generate/download license
install_license

# Setup a local repository and build the server if supplied in the charm
setup_local_repo || add_apt_sources

install_landscape || die "Error installing landscape"
configure_landscape

service apache2 restart

configure_pgbouncer

service pgbouncer restart

service apache2 restart

# HTTP/HTTPS
open-port 80/tcp
open-port 443/tcp

exit 0
